@using Olive
@using Nextended.Core.Extensions
@using AMS_SCHEMA.Class
@Accessor @("partial".OnlyWhen(IsPartial)) @Type.ToString().ToLower() @(CodeGen.ClassName) @Inheritance
{
    @ChildContent
}
@code {
    public enum ClassTypeEnum { Class, Interface }

    [Parameter]
    public ClassTypeEnum Type { get; set; }


    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [CascadingParameter]
    public CodeGeneratorTemplate CodeGen { get; set; }

    [CascadingParameter(Name = nameof(CodeGenHints))]
    public bool CodeGenHints { get; set; } = false;

    [Parameter]
    public string Accessor { get; set; } = "public";

    [Parameter]
    public bool IsPartial { get; set; } = true;

    [Parameter]
    public string? Inherits { get; set; }

    [Parameter]
    public bool ImplementsSelfInterface { get; set; }

    [Parameter]
    public string[]? Interfaces { get; set; }

    string Inheritance => ','.ToJoining( Inherits, $"I{CodeGen.ClassName}".OnlyWhen(ImplementsSelfInterface).OrNullIfEmpty(), Interfaces)
                         .WithWrappers(" : ", null)
                            ;
}
