@page "/index"
@using AMS_SCHEMA.Application.Export
@using AMS.Model.Services
@using AMS_SCHEMA.Class
@using Blueprint41

<PageTitle>Index</PageTitle>


Welcome to Schema Explorer.


<MudButton Variant="Variant.Text" Color="Color.Success" StartIcon="@Icons.TwoTone.Add" OnClick="GenTypes">
    Generate Types
</MudButton>

<MudButton Variant="Variant.Text" Color="Color.Success" StartIcon="@Icons.TwoTone.GeneratingTokens" OnClick="GenerateXmlClick">
    Export BP41 XML
</MudButton>


<MudButton Variant="Variant.Text" Color="Color.Success" StartIcon="@Icons.TwoTone.Add" OnClick="AddMethodToFile">
    Add Method To File
    
</MudButton>



@foreach (var str in FullTypes)
{
    <text>
        "@(str)",

    </text>
    <br />
}

@code {
    string[] types = new string[]{"string",
        "bool",
        "long",
        "int",
        "float",
        "sbyte",
        "short",
        "DateTime",
        "decimal",
        "double",
        "char",
        "Guid",
        "object"};

    List<string> FullTypes = new List<string>();

    void GenTypes()
    {
        var tmp = new[] { "{0}", "List<{0}>", "Dictionary<{0},{1}>" };
        foreach (var tm in tmp.Take(2))
        {
            foreach (var type in types)
            {
                FullTypes.Add(string.Format(tm, type));
            }
        }
        foreach (var type1 in types)
            foreach (var type2 in types)
                FullTypes.Add(string.Format(tmp[2], type1, type2));

    }

    [Inject] DataService DataService { get; set; }

    void GenerateXmlClick()
    {
        var labels = DataService.GetLabels();
        List<MyEntity> list = new List<MyEntity>();
        
        ExportService.ExportBP41Xml();
    }

    class MyEntity
    {
        public string label { get; set; }
    }

    [Inject] public NavigationManager NavigationManager { get; set; }

    void GotoSettings()
    {
        NavigationManager.NavigateTo("/ModuleSettings");
    }

    async Task AddMethodToFile()
    {
        await @"E:\QOQNOS\ACCOUNT\QOQNOS.ACCOUNT.APPLICATION.GRAINS\ApplicationGrainMethod.cs".AddMethodToFile(@"
    public void MyInjectedMethod()
    { 
        Console.WriteLine(""Hello, World!"");
    }
");
    }

}