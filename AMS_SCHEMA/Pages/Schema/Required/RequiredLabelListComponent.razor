@using AMS.Model.Models
@using AMS.Model.Services

@using Olive

<MudContainer Style="max-height: 600px;overflow-y: scroll">

    <MudButton Variant="Variant.Text" Color="Color.Success" StartIcon="@Icons.TwoTone.Add" OnClick="NewLabelRequireRelationClick">
        New Requirement
    </MudButton>

    <MudTable Items="RequiredRelations">
        <HeaderContent>
            <MudTd>Relation</MudTd>
            <MudTd>Count</MudTd>
            <MudTd>Is Force-New</MudTd>
            <MudTd></MudTd>
            <MudTd></MudTd>
        </HeaderContent>
        <RowTemplate>
            <MudTd>
                <MudStack Row="false" Spacing="0">
                        <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                            <MudChip Label="false" Color="@(context.Relation.From.Id != Label.Id ?Color.Warning:Color.Default)"
                                     Size="Size.Small">
                                <LabelIconComponent Label="context.Relation.From" Size="Size.Small" />
                                @context.Relation.From.Name
                            </MudChip>
                            <MudText Typo="Typo.body2">-</MudText>
                            <MudChip Label="true" Size="Size.Small">
                                @context.Relation.RelType.Name.WithWrappers("[","]")
                            </MudChip>
                            <MudText Typo="Typo.body2">-&gt;</MudText>
                            <MudChip Label="false" Size="Size.Small" Color="@(context.Relation.To.Id != Label.Id ?Color.Warning:Color.Default)">
                                <LabelIconComponent Label="context.Relation.To" Size="Size.Small" />
                                @context.Relation.To.Name
                            </MudChip>
                        </MudStack>
                    <MudText Typo="Typo.overline">@context.Relation.From.DisplayName</MudText>
                </MudStack>
            </MudTd>
            <MudTd>
                @context.ReqCount
            </MudTd>
            <MudTd>
                @context.IsForceToCreateNew
            </MudTd>
            <MudTd>
                <MudButton Variant="Variant.Text" Color="Color.Info" StartIcon="@Icons.TwoTone.Edit" OnClick="() => EditRequireRelation(context)">
                    Edit
                </MudButton>
            </MudTd>
            <MudTd>
                <MudIconButton Icon="@Icons.TwoTone.Delete" Color="Color.Error" OnClick="()=>DeleteRequireRelationClick(context)"></MudIconButton>
            </MudTd>

        </RowTemplate>
    </MudTable>
</MudContainer>

@code {

    [Inject] DataService DataService { get; set; }
    public List<AmsNeo4JNodeLabelRequiredRelation> RequiredRelations => DataService.GetLabelRequires(Label);

    [Inject]
    public IDialogService DialogService { get; set; }

    //    [Parameter]
    //    public AmsNeo4JNode Node { get; set; }

    [Parameter]
    public AmsNeo4JNodeLabel Label { get; set; }

    async Task NewLabelRequireRelationClick()
    {
        var requiredRelation = new AmsNeo4JNodeLabelRequiredRelation()
            {
                Label = Label,
                LabelFk = Label.Id,
            };
        await OpenRequireRelationDialog(requiredRelation);
    }

    async Task OpenRequireRelationDialog(AmsNeo4JNodeLabelRequiredRelation require)
    {
        var dialogReference = DialogService.Show<RequiredLabelDialog>("Related Data Label Requirement",
            new DialogParameters
            {
                    ["Require"] = require
                },
            new DialogOptions
            {
                    FullWidth = true,
                    MaxWidth = MaxWidth.Medium
                });
        var dialogReferenceResult = await dialogReference.Result;
        StateHasChanged();
    }

    async Task EditRequireRelation(AmsNeo4JNodeLabelRequiredRelation relation)
    {
        await OpenRequireRelationDialog(relation);
    }

    async Task DeleteRequireRelationClick(AmsNeo4JNodeLabelRequiredRelation context)
    {
        var answer = await DialogService.ShowMessageBox("Warning", "Are you sure to delete this Require Relation ?", "Yes", "No");
        if (answer is true)
            DataService.DeleteLabelRequire(context);

    }

}
