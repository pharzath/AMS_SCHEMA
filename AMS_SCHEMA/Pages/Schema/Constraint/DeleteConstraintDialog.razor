@using AMS.Model.Models
@using AMS.Model.Services
@using Olive
<MudDialog Class="pa-3">
    <DialogContent>
        <MudText Typo="Typo.h6">
            Before continue to delete apply to remove CONSTRAINT from Neo4J Database.
        </MudText>
        <MudText Typo="Typo.body1">
            To remove CONSTRAINT from Database execute this Cypher command in the Neo4J shell. Then click Continue to remove it from the Schema Explorer Application too.
        </MudText>
        <MudTextField Label="Remove Constraint Cypher Command" Value="CypherCommand" Lines="10"></MudTextField>

    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Text" Color="Color.Error" StartIcon="@Icons.TwoTone.Delete" OnClick="ContinueToRemoveConstraintClick">
            Continue
        </MudButton>

        <MudButton Variant="Variant.Filled" Color="Color.Success" StartIcon="@Icons.TwoTone.Undo" OnClick="CloseClick">
            Ignore Removing Constraint
        </MudButton>
    </DialogActions>
</MudDialog>

@code {

    [Parameter]
    public AmsNeo4JNodeConstraint Constraint
    {
        get => _constraint;
        set
        {
            _constraint = value;
            var createPhrase = "CREATE CONSTRAINT ";
            var s1 = _constraint.Command.Substring(_constraint.Command.IndexOf(createPhrase, StringComparison.OrdinalIgnoreCase) + createPhrase.Length);
            var s2 = s1.Split(new[] { '\r', '\n', ' ' }, StringSplitOptions.RemoveEmptyEntries);
            CypherCommand = $"DROP CONSTRAINT {s2[0].RemoveFrom(" ")} IF EXISTS";
        }
    }

    [CascadingParameter]
    public MudDialogInstance DialogInstance { get; set; }

    [Inject] DataService DataService { get; set; }

    public string? CypherCommand { get; set; }

    void CloseClick()
    {
        DialogInstance.Cancel();
    }

    void ContinueToRemoveConstraintClick()
    {
        DataService.DeleteConstraint(Constraint);
        DialogInstance.Close(DialogResult.Ok(true,typeof(bool)));
    }

    AmsNeo4JNodeConstraint _constraint;
}
